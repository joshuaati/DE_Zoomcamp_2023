

============================== 2023-02-19 05:29:41.189238 | bbd0b9c8-7a37-47a6-88f6-5be1a50b970c ==============================
05:29:41.189238 [info ] [MainThread]: Running with dbt=1.0.9
05:29:41.191037 [debug] [MainThread]: running dbt with arguments Namespace(record_timing_info=None, debug=None, log_format=None, write_json=None, use_colors=None, printer_width=None, warn_error=None, version_check=None, partial_parse=None, single_threaded=False, use_experimental_parser=None, static_parser=None, profiles_dir='/root/.dbt', send_anonymous_usage_stats=None, fail_fast=None, event_buffer_size=None, project_dir=None, profile=None, target=None, vars='{}', log_cache_events=False, project_name=None, skip_profile_setup=False, defer=None, state=None, cls=<class 'dbt.task.init.InitTask'>, which='init', rpc_method=None)
05:29:41.193084 [debug] [MainThread]: Tracking: tracking
05:29:41.198025 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4959e92df0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4959e92fd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4959e92fa0>]}
05:29:53.978727 [debug] [MainThread]: Starter project path: /usr/local/lib/python3.9/site-packages/dbt/include/starter_project
05:31:01.513235 [info ] [MainThread]: Profile taxi_rides_ny written to /root/.dbt/profiles.yml using target's profile_template.yml and your supplied values. Run 'dbt debug' to validate the connection.
05:31:01.518717 [info ] [MainThread]: 
Your new dbt project "taxi_rides_ny" was created!

For more information on how to configure the profiles.yml file,
please consult the dbt documentation here:

  https://docs.getdbt.com/docs/configure-your-profile

One more thing:

Need help? Don't hesitate to reach out to us via GitHub issues or on Slack:

  https://community.getdbt.com/

Happy modeling!

05:31:01.524027 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4959e925b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4959e92e20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4959e92490>]}


============================== 2023-02-19 19:07:10.909367 | f5a0f991-0eba-4a4e-86aa-a1a506ce4242 ==============================
19:07:10.909367 [info ] [MainThread]: Running with dbt=1.0.9
19:07:10.913725 [debug] [MainThread]: running dbt with arguments Namespace(record_timing_info=None, debug=None, log_format=None, write_json=None, use_colors=None, printer_width=None, warn_error=None, version_check=None, partial_parse=None, single_threaded=False, use_experimental_parser=None, static_parser=None, profiles_dir='/root/.dbt', send_anonymous_usage_stats=None, fail_fast=None, event_buffer_size=None, project_dir=None, profile=None, target=None, vars='{}', log_cache_events=False, config_dir=False, defer=None, state=None, cls=<class 'dbt.task.debug.DebugTask'>, which='debug', rpc_method=None)
19:07:10.917326 [debug] [MainThread]: Tracking: tracking
19:07:10.938342 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb57263f910>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb57263f880>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb57263f7c0>]}
19:07:12.154579 [debug] [MainThread]: Executing "git --help"
19:07:12.175757 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone             Clone a repository into a new directory\n   init              Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add               Add file contents to the index\n   mv                Move or rename a file, a directory, or a symlink\n   restore           Restore working tree files\n   rm                Remove files from the working tree and from the index\n   sparse-checkout   Initialize and modify the sparse-checkout\n\nexamine the history and state (see also: git help revisions)\n   bisect            Use binary search to find the commit that introduced a bug\n   diff              Show changes between commits, commit and working tree, etc\n   grep              Print lines matching a pattern\n   log               Show commit logs\n   show              Show various types of objects\n   status            Show the working tree status\n\ngrow, mark and tweak your common history\n   branch            List, create, or delete branches\n   commit            Record changes to the repository\n   merge             Join two or more development histories together\n   rebase            Reapply commits on top of another base tip\n   reset             Reset current HEAD to the specified state\n   switch            Switch branches\n   tag               Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch             Download objects and refs from another repository\n   pull              Fetch from and integrate with another repository or a local branch\n   push              Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
19:07:12.180126 [debug] [MainThread]: STDERR: "b''"
19:07:12.214371 [debug] [MainThread]: Acquiring new bigquery connection "debug"
19:07:12.221142 [debug] [MainThread]: Opening a new connection, currently in state init
19:07:12.228780 [debug] [MainThread]: BigQuery adapter: Got an error when attempting to create a bigquery client: '[Errno 2] No such file or directory: '.google/credentials/google_credentials.json''
19:07:12.237240 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb570b07b50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb570b07730>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb570b07040>]}
19:07:16.673587 [debug] [MainThread]: Connection 'debug' was properly closed.


============================== 2023-02-19 19:10:52.671436 | b847c008-4897-4400-91e2-42eec54fc48a ==============================
19:10:52.671436 [info ] [MainThread]: Running with dbt=1.0.9
19:10:52.674441 [debug] [MainThread]: running dbt with arguments Namespace(record_timing_info=None, debug=None, log_format=None, write_json=None, use_colors=None, printer_width=None, warn_error=None, version_check=None, partial_parse=None, single_threaded=False, use_experimental_parser=None, static_parser=None, profiles_dir='/root/.dbt', send_anonymous_usage_stats=None, fail_fast=None, event_buffer_size=None, project_dir=None, profile=None, target=None, vars='{}', log_cache_events=False, config_dir=False, defer=None, state=None, cls=<class 'dbt.task.debug.DebugTask'>, which='debug', rpc_method=None)
19:10:52.677053 [debug] [MainThread]: Tracking: tracking
19:10:52.686727 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effad6abc40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effad6abf70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effad6abe50>]}
19:10:53.498206 [debug] [MainThread]: Executing "git --help"
19:10:53.509879 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone             Clone a repository into a new directory\n   init              Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add               Add file contents to the index\n   mv                Move or rename a file, a directory, or a symlink\n   restore           Restore working tree files\n   rm                Remove files from the working tree and from the index\n   sparse-checkout   Initialize and modify the sparse-checkout\n\nexamine the history and state (see also: git help revisions)\n   bisect            Use binary search to find the commit that introduced a bug\n   diff              Show changes between commits, commit and working tree, etc\n   grep              Print lines matching a pattern\n   log               Show commit logs\n   show              Show various types of objects\n   status            Show the working tree status\n\ngrow, mark and tweak your common history\n   branch            List, create, or delete branches\n   commit            Record changes to the repository\n   merge             Join two or more development histories together\n   rebase            Reapply commits on top of another base tip\n   reset             Reset current HEAD to the specified state\n   switch            Switch branches\n   tag               Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch             Download objects and refs from another repository\n   pull              Fetch from and integrate with another repository or a local branch\n   push              Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
19:10:53.513210 [debug] [MainThread]: STDERR: "b''"
19:10:53.531717 [debug] [MainThread]: Acquiring new bigquery connection "debug"
19:10:53.536240 [debug] [MainThread]: Opening a new connection, currently in state init
19:10:53.540510 [debug] [MainThread]: BigQuery adapter: Got an error when attempting to create a bigquery client: '[Errno 2] No such file or directory: '.google/credentials/google_credentials.json''
19:10:53.544775 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effabad3b50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effabad3df0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effabad3460>]}
19:10:57.436954 [debug] [MainThread]: Connection 'debug' was properly closed.
